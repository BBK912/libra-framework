name: build_env
description: setup libra ci
runs:
  using: composite
  steps:

    - name: free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: build-essential ca-certificates clang curl git libpq-dev libssl-dev pkg-config lsof lld libgmp-dev
        version: 1.0

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: 1.70.0
        override: true

    - name: install rustfmt clippy
      shell: bash
      run: rustup component add rustfmt clippy


    - name: download sccache bin
      shell: bash
      run: >
        wget https://github.com/mozilla/sccache/releases/download/v0.5.4/sccache-v0.5.4-x86_64-unknown-linux-musl.tar.gz &&
        tar -xvf sccache-v0.5.4-x86_64-unknown-linux-musl.tar.gz &&
        cp sccache-v0.5.4-x86_64-unknown-linux-musl/sccache /usr/local/bin/sccache &&
        chmod 744 /usr/local/bin/sccache

    - name: checkout sources
      uses: actions/checkout@v3
      with:
        # git-restore-mtime-bare uses the ref log to find the correct timestamp
        # for each file. This requires a full git history. The default value (1)
        # creates a shallow checkout.
        fetch-depth: 0

    - name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "libra" # to share across CI builds, so it is not job-id specific
        cache-on-failure: true

    # don't do this before test because rust tools may not build inluding sccache itself.
    # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
    - name: set sccache read only keys
      shell: bash
      run: >
          echo "AWS_ACCESS_KEY_ID=96f1f3ac10bb6d5fac520afeb05d9acd" >> "$GITHUB_ENV" &&
          echo "AWS_SECRET_ACCESS_KEY= d6901886043f52102af7cf4b24014aebc84a120a30f19f664df1993ee64d634c" >> "$GITHUB_ENV" &&
          echo "SCCACHE_BUCKET=ubuntu-libra" >> "$GITHUB_ENV" &&
          echo "SCCACHE_ENDPOINT=https://afcdb03dd0764818ac9aec7fe0c0b8b5.r2.cloudflarestorage.com/ubuntu-libra" >> "$GITHUB_ENV" &&
          echo "SCCACHE_REGION=auto" >> "$GITHUB_ENV" &&
          echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"

    - name: maybe use sccache read/write secret
      if: ${{ secrets.AWS_ACCESS_KEY_ID != 0 && github.event_name != "pull_request"}}
      shell: bash
      run: >
          echo "AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" >> "$GITHUB_ENV" &&
          echo "AWS_SECRET_ACCESS_KEY= ${{secrets.AWS_SECRET_ACCESS_KEY}}" >> "$GITHUB_ENV"

    - name: cargo mtime reset
      uses: chetan/git-restore-mtime-action@v2